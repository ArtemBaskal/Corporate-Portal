{"version":3,"sources":["actions/types.ts","actions/apps.ts","components/Card.tsx","helpers/radixSort.ts","components/MainPage.tsx","components/Catalog.tsx","components/AccessControl.tsx","components/App.tsx","reducers/selectedItemsReducer.ts","reducers/accessRightsReducer.ts","reducers/index.ts","index.tsx","Root.tsx"],"names":["ActionTypes","Admins","Users","connect","state","apps","accessRights","label","handleSelect","handleDelete","canShowBacketwaste","onDragStart","onDragOver","onDragEnd","onClick","className","src","cardImages","filter","el","name","image","status","slice","isSelected","level","Object","values","pinnedBy","some","keys","join","togglePin","type","TOGGLE_PIN","payload","handleDrag","data","DRAG","getDigit","num","i","Math","floor","abs","pow","radixSort","arr","sortByKey","order","maxDigitCount","nums","maxDigits","length","max","log10","mostDigits","map","obj","k","digitBuckets","Array","from","digit","push","cb","bucket","current","concat","reduce","reduceRight","deleteFromSelected","id","DELETE_FROM_SELECTED","idx","key","Boolean","Catalog","props","draggedIdx","draggedOverIdx","e","dataTransfer","effectAllowed","setDragImage","target","items","JSON","parse","stringify","this","selectFromCatalog","deleteFromCatalog","isInCatalog","stopPropagation","React","Component","TOGGLE_SELECT","DELETE_FROM_CATALOG","ACCESS_RIGHTS","User","Admin_System","Admin_MRF","Admin_RF","accessRightsChange","CHANGE_ACCESS_RIGHTS","onChange","value","App","basename","to","path","exact","component","MainPage","INITAL_STATE","Аквамен","Бэтмен","Киборг","Флэш","Супергёрл","Супермен","Сорвиголова","Халк","Тор","p","action","prevLevel","combineReducers","selectedItemsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ReactDOM","render","children","initialState","enhancer","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.82b05e78.chunk.js","sourcesContent":["import {\r\n  HandleByIdAction,\r\n  AccessRightsChangeAction,\r\n  TogglePinAction,\r\n  HandleDragAction\r\n} from \"./apps\";\r\n\r\nexport enum ActionTypes {\r\n  TOGGLE_SELECT = \"TOGGLE_SELECT\",\r\n  DELETE_FROM_SELECTED = \"DELETE_FROM_SELECTED\",\r\n  CHANGE_ACCESS_RIGHTS = \"CHANGE_ACCESS_RIGHTS\",\r\n  DELETE_FROM_CATALOG = \"DELETE_FROM_CATALOG\",\r\n  TOGGLE_PIN = \"TOGGLE_PIN\",\r\n  DRAG = \"DRAG\"\r\n}\r\n\r\nexport type Action =\r\n  | HandleByIdAction\r\n  | AccessRightsChangeAction\r\n  | TogglePinAction\r\n  | HandleDragAction;\r\n","import { ActionTypes } from \"./types\";\n\nexport enum Admins {\n  Admin_System = \"Admin_System\",\n  Admin_MRF = \"Admin_MRF\",\n  Admin_RF = \"Admin_RF\"\n}\n\nexport enum Users {\n  User = \"User\"\n}\n\nexport interface PinnedBy {\n  [Admins.Admin_System]: boolean;\n  [Admins.Admin_MRF]: boolean;\n  [Admins.Admin_RF]: boolean;\n  level: number;\n}\n\nexport interface App {\n  order: number;\n  label: string;\n  isSelected: boolean;\n  pinnedBy: PinnedBy;\n  isInCatalog: boolean;\n}\n\nexport interface STATE {\n  [key: string]: App;\n}\n\nexport interface AccessRights {\n  status: Admins | Users;\n  level: number;\n}\n\nexport interface TogglePinPayload {\n  label: string;\n  accessRights: AccessRights;\n}\n\nexport interface HandleByIdAction {\n  type:\n    | ActionTypes.TOGGLE_SELECT\n    | ActionTypes.DELETE_FROM_SELECTED\n    | ActionTypes.DELETE_FROM_CATALOG;\n  payload: string;\n}\n\nexport interface AccessRightsChangeAction {\n  type: ActionTypes.CHANGE_ACCESS_RIGHTS;\n  payload: AccessRights;\n}\n\nexport interface TogglePinAction {\n  type: ActionTypes.TOGGLE_PIN;\n  payload: TogglePinPayload;\n}\n\nexport interface HandleDragAction {\n  type: ActionTypes.DRAG;\n  payload: STATE;\n}\n\nexport const selectFromCatalog = (id: string): HandleByIdAction => {\n  return {\n    type: ActionTypes.TOGGLE_SELECT,\n    payload: id\n  };\n};\n\nexport const deleteFromSelected = (id: string): HandleByIdAction => {\n  return {\n    type: ActionTypes.DELETE_FROM_SELECTED,\n    payload: id\n  };\n};\n\nexport const deleteFromCatalog = (id: string): HandleByIdAction => {\n  return {\n    type: ActionTypes.DELETE_FROM_CATALOG,\n    payload: id\n  };\n};\n\nexport const accessRightsChange = (\n  data: AccessRights\n): AccessRightsChangeAction => {\n  return {\n    type: ActionTypes.CHANGE_ACCESS_RIGHTS,\n    payload: data\n  };\n};\n\nexport const togglePin = ({\n  label,\n  accessRights\n}: TogglePinPayload): TogglePinAction => {\n  return {\n    type: ActionTypes.TOGGLE_PIN,\n    payload: { label, accessRights }\n  };\n};\n\nexport const handleDrag = (data: STATE): HandleDragAction => {\n  return {\n    type: ActionTypes.DRAG,\n    payload: data\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/Card.css\";\nimport cardImages from \"../api/superheroes.json\";\nimport { AccessRights, STATE, Admins } from \"../actions\";\nimport { StoreState } from \"../reducers\";\n\ninterface AppProps {\n  label: string;\n  apps: STATE;\n  handleSelect?:\n    | ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\n    | undefined;\n  handleDelete?:\n    | ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\n    | undefined;\n  accessRights: AccessRights;\n  canShowBacketwaste?: boolean;\n  onDragStart?(e: React.DragEvent): void;\n  onDragOver?(e: React.DragEvent): void;\n  onDragEnd?(e: React.DragEvent): void;\n  isSelected?: boolean;\n}\n\nconst Card = ({\n  label,\n  apps,\n  handleSelect,\n  handleDelete,\n  accessRights,\n  canShowBacketwaste,\n  onDragStart,\n  onDragOver,\n  onDragEnd\n}: AppProps): JSX.Element => (\n  <div>\n    {label && (\n      <div\n        onClick={handleSelect}\n        onDragStart={onDragStart}\n        onDragOver={onDragOver}\n        onDragEnd={onDragEnd}\n        className=\"card\"\n      >\n        <img\n          className=\"card__img\"\n          // src={`${cardImages[apps[label].order % (cardImages.length - 1)].image}`}\n          //TODO: change using normalizr\n          src={cardImages.filter(el => el.name === label)[0].image}\n        ></img>\n\n        {accessRights.status &&\n          accessRights.status.slice(0, 5) === \"Admin\" &&\n          !canShowBacketwaste && (\n            <span onClick={handleDelete} className=\"card__cross\">\n              &#10060;\n            </span>\n          )}\n\n        {apps[label] && apps[label].isSelected && (\n          <span className=\"card__check\">&#10003;</span>\n        )}\n\n        {accessRights.status &&\n          accessRights.status.slice(0, 5) === \"Admin\" &&\n          accessRights.level > 0 &&\n          canShowBacketwaste && (\n            <span className=\"card__basketwaste\" onClick={handleDelete}>\n              &#x2612;\n            </span>\n          )}\n\n        {apps[label] &&\n          Object.values(apps[label].pinnedBy).some(el => el === true) && (\n            <span\n              className={\n                \"card__pin \" +\n                Object.keys(apps[label].pinnedBy)\n                  .filter(el => apps[label].pinnedBy[el as Admins] === true)\n                  .join(\" \")\n              }\n            >\n              &#x1F4CC;\n            </span>\n          )}\n        <h1 className=\"card__title\">{label}</h1>\n      </div>\n    )}\n  </div>\n);\n\nconst mapStateToProps = (state: StoreState): StoreState => ({\n  apps: state.apps,\n  accessRights: state.accessRights\n});\n\nexport default connect(mapStateToProps)(Card);\n","//O(n*k), n - length of array, k - length of largest number\r\n\r\nfunction getDigit(num: number, i: number): number {\r\n  return Math.floor(Math.abs(num) / Math.pow(10, i)) % 10;\r\n}\r\n\r\nfunction digitCount(num: number): number {\r\n  if (num === 0) return 1;\r\n  return Math.floor(Math.log10(Math.abs(num))) + 1;\r\n}\r\n\r\nfunction mostDigits(nums: number[]): number {\r\n  let maxDigits = 0;\r\n  for (let i = 0; i < nums.length; i++) {\r\n    maxDigits = Math.max(maxDigits, digitCount(nums[i]));\r\n  }\r\n  return maxDigits;\r\n}\r\n\r\ntype Arr = {\r\n  [key: string]: number;\r\n};\r\n\r\nexport default function radixSort(\r\n  arr: Arr[],\r\n  sortByKey: string,\r\n  order: \"DESC\" | \"ASC\"\r\n) {\r\n  let nums = arr.map((obj: Arr) => obj[sortByKey] || 0);\r\n  let maxDigitCount = mostDigits(nums as number[]);\r\n\r\n  for (let k = 0; k < maxDigitCount; k++) {\r\n    let digitBuckets: Arr[][] = Array.from({ length: 10 }, () => []);\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let digit = getDigit((arr[i][sortByKey] as number) || 0, k);\r\n      digitBuckets[digit].push(arr[i]);\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n    (function flatten() {\r\n      arr = [];\r\n      const cb = (bucket: Arr[], current: Arr[]): Arr[] =>\r\n        (arr = bucket.concat(current));\r\n\r\n      return order === \"ASC\"\r\n        ? digitBuckets.reduce(cb)\r\n        : digitBuckets.reduceRight(cb);\r\n    })();\r\n  }\r\n\r\n  return arr;\r\n}\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport { deleteFromSelected, togglePin, handleDrag } from \"../actions\";\nimport \"../styles/Card.css\";\nimport { STATE, PinnedBy } from \"../actions\";\nimport radixSort from \"../helpers/radixSort\";\n\ninterface MainPageProps {\n  apps: STATE;\n  deleteFromSelected: typeof deleteFromSelected;\n}\n\nconst MainPage = ({ apps, deleteFromSelected }: MainPageProps): JSX.Element => {\n  return (\n    <div className=\"card-container\">\n      {radixSort(Object.values(apps) as [], \"order\", \"ASC\").map(\n        (\n          {\n            label,\n            isSelected,\n            pinnedBy\n          }: { label?: string; isSelected?: boolean; pinnedBy?: PinnedBy },\n          idx: number\n        ) => {\n          if (\n            isSelected ||\n            Object.values(pinnedBy as PinnedBy).some(el => el === true)\n          ) {\n            return (\n              <Card\n                key={label}\n                label={label as string}\n                isSelected={Boolean(isSelected)}\n                handleDelete={() => deleteFromSelected(label as string)}\n              />\n            );\n          }\n        }\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ apps }: { apps: STATE }): { apps: STATE } => ({\n  apps\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    deleteFromSelected,\n    togglePin,\n    handleDrag\n  }\n)(MainPage);\n","import React from \"react\";\nimport Card from \"./Card\";\nimport { connect } from \"react-redux\";\nimport {\n  selectFromCatalog,\n  deleteFromCatalog,\n  togglePin,\n  handleDrag,\n  HandleByIdAction,\n  TogglePinAction\n} from \"../actions\";\nimport { STATE, AccessRights } from \"../actions\";\nimport { StoreState } from \"../reducers\";\nimport radixSort from \"../helpers/radixSort\";\n\ninterface CatalogProps {\n  accessRights: AccessRights;\n  apps: STATE;\n  selectFromCatalog: typeof selectFromCatalog;\n  deleteFromCatalog: typeof deleteFromCatalog;\n  togglePin: typeof togglePin;\n  handleDrag: typeof handleDrag;\n}\n\nclass Catalog extends React.Component<CatalogProps> {\n  constructor(\n    props: CatalogProps,\n    private draggedIdx?: string | null,\n    private draggedOverIdx?: string | null\n  ) {\n    super(props);\n  }\n\n  onDragStart = (e: React.DragEvent, idx: string): void => {\n    const {\n      accessRights: { status }\n    } = this.props;\n\n    if (status && status.slice(0, 5) === \"Admin\") {\n      this.draggedIdx = idx;\n      e.dataTransfer.effectAllowed = \"grabbing\";\n      e.dataTransfer.setDragImage(e.target as HTMLElement, 50, 50);\n    }\n  };\n\n  onDragOver = (idx: string): void => {\n    const { accessRights, apps, handleDrag } = this.props;\n    if (accessRights.status && accessRights.status.slice(0, 5) === \"Admin\") {\n      this.draggedOverIdx = idx;\n\n      if (this.draggedIdx === this.draggedOverIdx) {\n        return;\n      }\n\n      const items = JSON.parse(JSON.stringify(apps));\n\n      [items[idx].order, items[this.draggedIdx as string].order] = [\n        items[this.draggedIdx as string].order,\n        items[idx].order\n      ];\n\n      handleDrag(items);\n    }\n    return;\n  };\n\n  onDragEnd = (): void => {\n    const { accessRights } = this.props;\n    if (accessRights.status && accessRights.status.slice(0, 5) === \"Admin\") {\n      this.draggedIdx = null;\n    }\n  };\n\n  render() {\n    const {\n      accessRights,\n      apps,\n      selectFromCatalog,\n      deleteFromCatalog,\n      togglePin\n    } = this.props;\n    return (\n      <div className=\"card-container\">\n        {radixSort(Object.values(apps) as [], \"order\", \"ASC\").map(\n          ({ isInCatalog, label }: { isInCatalog?: boolean; label?: string }) =>\n            isInCatalog && (\n              <Card\n                onDragStart={(e: React.DragEvent) =>\n                  this.onDragStart(e, label as string)\n                }\n                onDragOver={() => this.onDragOver(label as string)}\n                onDragEnd={this.onDragEnd}\n                label={label as string}\n                key={label as string}\n                canShowBacketwaste\n                handleSelect={(\n                  e: React.MouseEvent\n                ): TogglePinAction | HandleByIdAction => {\n                  e.stopPropagation();\n                  if (\n                    accessRights &&\n                    accessRights.status &&\n                    accessRights.status.slice(0, 5) === \"Admin\"\n                  )\n                    return togglePin({\n                      label: label as string,\n                      accessRights\n                    });\n                  return selectFromCatalog(label as string);\n                }}\n                handleDelete={(e: React.MouseEvent) => {\n                  e.stopPropagation();\n                  return deleteFromCatalog(label as string);\n                }}\n              />\n            )\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ accessRights, apps }: CatalogProps): StoreState => ({\n  accessRights,\n  apps\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    selectFromCatalog,\n    deleteFromCatalog,\n    togglePin,\n    handleDrag\n  }\n)(Catalog);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { accessRightsChange, AccessRights } from \"../actions\";\r\nimport \"../styles/Card.css\";\r\nimport { Admins, Users } from \"../actions\";\r\n\r\ninterface AccessControlProps {\r\n  accessRightsChange: typeof accessRightsChange;\r\n}\r\n\r\nconst ACCESS_RIGHTS: { [key: string]: AccessRights } = {\r\n  User: { status: Users.User, level: 0 },\r\n  Admin_System: { status: Admins.Admin_System, level: 1 },\r\n  Admin_MRF: { status: Admins.Admin_MRF, level: 2 },\r\n  Admin_RF: { status: Admins.Admin_RF, level: 3 }\r\n};\r\n\r\nconst AccessControl = ({\r\n  accessRightsChange\r\n}: AccessControlProps): JSX.Element => (\r\n  <div className=\"access-control__select\">\r\n    <select\r\n      name=\"access\"\r\n      id=\"access\"\r\n      onChange={e => accessRightsChange(ACCESS_RIGHTS[e.target.value])}\r\n    >\r\n      {Object.values(ACCESS_RIGHTS).map(({ status }) => (\r\n        <option key={status}>{status}</option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  { accessRightsChange }\r\n)(AccessControl);\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\nimport Catalog from \"./Catalog\";\r\nimport AccessControl from \"./AccessControl\";\r\n// import history from \"../history\";\r\n\r\nconst App = (): JSX.Element => (\r\n  <HashRouter basename=\"/\">\r\n    <nav className=\"navigation__nav\">\r\n      <Link to=\"/\">На главную</Link>\r\n      <Link to=\"/catalog\">Каталог приложений</Link>\r\n      <AccessControl />\r\n    </nav>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={MainPage} />\r\n      <Route path=\"/catalog\" exact component={Catalog} />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","import {\n  App,\n  STATE,\n  Action,\n  ActionTypes,\n  TogglePinPayload,\n  Admins\n} from \"../actions\";\nimport p from \"immer\";\n\nconst INITAL_STATE = {\n  Аквамен: {\n    order: 0,\n    label: \"Аквамен\",\n    isSelected: true,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_RF: true,\n      Admin_MRF: false,\n      level: 3\n    },\n    isInCatalog: true\n  },\n  Бэтмен: {\n    order: 1,\n    label: \"Бэтмен\",\n    isSelected: true,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: true,\n      Admin_RF: false,\n      level: 2\n    },\n    isInCatalog: true\n  },\n  Киборг: {\n    order: 2,\n    label: \"Киборг\",\n    isSelected: true,\n    pinnedBy: {\n      Admin_System: true,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 1\n    },\n    isInCatalog: true\n  },\n  Флэш: {\n    order: 3,\n    label: \"Флэш\",\n    isSelected: true,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  \"Зелёный Фонарь\": {\n    order: 4,\n    label: \"Зелёный Фонарь\",\n    isSelected: true,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  Супергёрл: {\n    order: 5,\n    label: \"Супергёрл\",\n    isSelected: true,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  Супермен: {\n    order: 6,\n    label: \"Супермен\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  \"Чудо-женщина\": {\n    order: 7,\n    label: \"Чудо-женщина\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  \"Чёрная Пантера\": {\n    order: 8,\n    label: \"Чёрная Пантера\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  \"Капитан Америка\": {\n    order: 9,\n    label: \"Капитан Америка\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  Сорвиголова: {\n    order: 10,\n    label: \"Сорвиголова\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  \"Доктор Стрэндж\": {\n    order: 11,\n    label: \"Доктор Стрэндж\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  Халк: {\n    order: 12,\n    label: \"Халк\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  \"Железнй Человек\": {\n    order: 13,\n    label: \"Железнй Человек\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  \"Человек-паук\": {\n    order: 14,\n    label: \"Человек-паук\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  },\n  Тор: {\n    order: 15,\n    label: \"Тор\",\n    isSelected: false,\n    pinnedBy: {\n      Admin_System: false,\n      Admin_MRF: false,\n      Admin_RF: false,\n      level: 0\n    },\n    isInCatalog: true\n  }\n};\n\nexport default p((state: STATE = INITAL_STATE, action: Action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case ActionTypes.DRAG: {\n      return payload as STATE;\n    }\n\n    case ActionTypes.DELETE_FROM_SELECTED: {\n      state[payload as string].isSelected = false;\n      state[payload as string].pinnedBy = {\n        Admin_System: false,\n        Admin_MRF: false,\n        Admin_RF: false,\n        level: 0\n      };\n\n      return state;\n    }\n\n    case ActionTypes.DELETE_FROM_CATALOG:\n      state[payload as string].isSelected = false;\n      state[payload as string].isInCatalog = false;\n      state[payload as string].pinnedBy = {\n        Admin_System: false,\n        Admin_MRF: false,\n        Admin_RF: false,\n        level: 0\n      };\n\n      return state;\n\n    case ActionTypes.TOGGLE_SELECT:\n      state[payload as string].isSelected = !state[payload as string]\n        .isSelected;\n\n      return state;\n\n    case ActionTypes.TOGGLE_PIN:\n      const {\n        label,\n        accessRights: { status, level }\n      } = payload as TogglePinPayload;\n\n      let prevLevel = state[label].pinnedBy.level;\n\n      state[label].pinnedBy[status as Admins] = !state[label].pinnedBy[\n        status as Admins\n      ];\n      state[label].pinnedBy.level = level > prevLevel ? level : prevLevel;\n\n      return state;\n\n    default:\n      return state;\n  }\n});\n","import { ActionTypes } from \"../actions/types\";\r\nimport { AccessRightsChangeAction } from \"../actions\";\r\nimport { AccessRights } from \"../actions\";\r\nimport { Users } from \"../actions\";\r\n\r\nconst INITAL_STATE = { status: Users.User, level: 0 };\r\n\r\nexport default (\r\n  state: AccessRights = INITAL_STATE,\r\n  action: AccessRightsChangeAction\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.CHANGE_ACCESS_RIGHTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\nimport selectedItemsReducer from \"./selectedItemsReducer\";\nimport accessRightsReducer from \"./accessRightsReducer\";\nimport { STATE, AccessRights } from \"../actions\";\n\nexport interface StoreState {\n  apps: STATE;\n  accessRights: AccessRights;\n}\n\nexport default combineReducers<StoreState>({\n  apps: selectedItemsReducer,\n  accessRights: accessRightsReducer\n});\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { compose } from \"redux\";\r\nimport App from \"./components/App\";\r\nimport Root from \"./Root\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: Function;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// store.subscribe(() => console.log(\"STORE: \", store.getState()));\r\n\r\nReactDOM.render(\r\n  <Root enhancer={composeEnhancers()}>\r\n    <App />\r\n  </Root>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\ninterface Root {\r\n  children: JSX.Element;\r\n  initialState?: {};\r\n  enhancer: any;\r\n}\r\n\r\nexport default ({\r\n  children,\r\n  initialState = {},\r\n  enhancer\r\n}: Root): JSX.Element => {\r\n  const store = createStore(reducers, initialState, enhancer);\r\n  return <Provider store={store}>{children}</Provider>;\r\n};\r\n"],"sourceRoot":""}