{"version":3,"sources":["components/Card.js","actions/index.js","actions/types.js","components/MainPage.js","components/Catalog.js","components/AccessControl.js","history.js","components/App.js","reducers/selectedItemsReducer.js","reducers/index.js","reducers/accessRightsReducer.js","index.js"],"names":["connect","state","cards","item","accessRights","label","handleSelect","handleDelete","canShowBacketwaste","onDragStart","onDragOver","onDragEnd","order","toString","onClick","className","src","cardImages","length","image","status","slice","role","aria-label","isSelected","Object","values","pinnedBy","keys","join","handleSelectFromCatalog","data","type","payload","handlePinInSelected","MainPage","items","props","e","index","console","dir","target","draggedItem","dataTransfer","effectAllowed","setData","parentNode","setDragImage","draggedOverItem","filter","splice","test","draggedIdx","this","map","card","idx","key","handleDeleteFromSelected","React","Component","handleDeleteFromCatalog","sort","first","second","isInCatalog","stopPropagation","ACCESS_RIGHTS","User","priority","Admin_System","Admin_MRF","Admin_RT","handleAccessRightsChange","name","id","onChange","value","createHistory","require","createBrowserHistory","App","history","to","path","exact","component","Catalog","INITAL_STATE","p","action","log","combineReducers","selectedItemsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a695bced.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/Card.css\";\r\nimport cardImages from \"../api/superheroes.json\";\r\n\r\nconst Card = ({\r\n  label,\r\n  cards,\r\n  handleSelect,\r\n  handleDelete,\r\n  accessRights,\r\n  canShowBacketwaste,\r\n  onDragStart,\r\n  onDragOver,\r\n  onDragEnd,\r\n  order\r\n}) => (\r\n  <div>\r\n    {label.toString() && (\r\n      <div\r\n        onClick={handleSelect}\r\n        onDragStart={onDragStart}\r\n        onDragOver={onDragOver}\r\n        onDragEnd={onDragEnd}\r\n        className=\"card\"\r\n      >\r\n        <img\r\n          className=\"card\"\r\n          src={`${cardImages[label % (cardImages.length - 1)].image}`}\r\n        ></img>\r\n        {/* label */}\r\n        {accessRights.status &&\r\n          accessRights.status.slice(0, 5) === \"Admin\" &&\r\n          !canShowBacketwaste && (\r\n            <span\r\n              onClick={handleDelete}\r\n              className=\"card__cross\"\r\n              role=\"img\"\r\n              aria-label={\"X\"}\r\n            >\r\n              &#10060;\r\n            </span>\r\n          )}\r\n        {cards[label] && cards[label].isSelected && (\r\n          <span className=\"card__check\" role=\"img\">\r\n            &#10003;\r\n          </span>\r\n        )}\r\n        {accessRights.status &&\r\n          accessRights.status.slice(0, 5) === \"Admin\" &&\r\n          canShowBacketwaste && (\r\n            <span\r\n              className=\"card__basketwaste\"\r\n              role=\"img\"\r\n              onClick={handleDelete}\r\n            >\r\n              &#x2612;\r\n            </span>\r\n          )}\r\n        {cards[label] && Object.values(cards[label].pinnedBy).length > 1 && (\r\n          /* (cards[label].pinnedBy === \"Admin_System\" && */ <span\r\n            className={\r\n              \"card__pin \" + Object.keys(cards[label].pinnedBy).join(\" \")\r\n            }\r\n            role=\"img\"\r\n          >\r\n            &#x1F4CC;\r\n          </span>\r\n        )}\r\n        {/* <div className=\"card__info\">{`Selected:${isSelected}`}</div>\r\n        <div className=\"card__info\">{`Pinned:${pinnedBy}`}</div> */}\r\n        {/* <div>{JSON.stringify(cards[label])}</div> */}\r\n        <h1 className=\"card__title\">\r\n          {label /* + cardImages[label % (cardImages.length - 1)].name */}\r\n          {/* {\" \" + order} */}\r\n        </h1>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.item,\r\n  accessRights: state.accessRights\r\n});\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import {\r\n  SELECT_FROM_CATALOG,\r\n  DELETE_FROM_SELECTED,\r\n  CHANGE_ACCESS_RIGHTS,\r\n  DELETE_FROM_CATALOG,\r\n  PIN_IN_SELECTED\r\n} from \"./types\";\r\n\r\nexport const handleSelectFromCatalog = data => {\r\n  return {\r\n    type: SELECT_FROM_CATALOG,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const handleDeleteFromSelected = data => {\r\n  return {\r\n    type: DELETE_FROM_SELECTED,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const handleAccessRightsChange = data => {\r\n  return {\r\n    type: CHANGE_ACCESS_RIGHTS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const handleDeleteFromCatalog = data => {\r\n  return {\r\n    type: DELETE_FROM_CATALOG,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const handlePinInSelected = (data, accessRights) => {\r\n  return {\r\n    type: PIN_IN_SELECTED,\r\n    payload: { data, accessRights }\r\n  };\r\n};\r\n\r\nexport const test = data => {\r\n  return {\r\n    type: \"test\",\r\n    payload: data\r\n  };\r\n};\r\n","export const SELECT_FROM_CATALOG = \"SELECT_FROM_CATALOG\";\r\nexport const DELETE_FROM_SELECTED = \"DELETE_FROM_SELECTED\";\r\nexport const CHANGE_ACCESS_RIGHTS = \"CHANGE_ACCESS_RIGHTS\";\r\nexport const DELETE_FROM_CATALOG = \"DELETE_FROM_CATALOG\";\r\nexport const PIN_IN_SELECTED = \"PIN_IN_SELECTED\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"./Card\";\r\nimport { handleDeleteFromSelected } from \"../actions\";\r\nimport { handlePinInSelected } from \"../actions\";\r\nimport { handleSelectFromCatalog } from \"../actions\";\r\nimport { test } from \"../actions\";\r\nimport \"../styles/Card.css\";\r\n\r\nclass MainPage extends React.Component {\r\n  state = { items: Object.values(this.props.cards) };\r\n  // state = {\r\n  //   items: [\r\n  //     \"🍰 Cake\",\r\n  //     \"🍩 Donut\",\r\n  //     \"🍎 Apple\",\r\n  //     \"🍕 Pizza\",\r\n  //     1,\r\n  //     2,\r\n  //     3,\r\n  //     4,\r\n  //     5,\r\n  //     6,\r\n  //     7,\r\n  //     8,\r\n  //     9\r\n  //   ]\r\n  // };\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log(\"componentWillReceiveProps\");\r\n  //   // this.setState({ ...Object.values(this.props.cards).items });\r\n  // }\r\n\r\n  onDragStart = (e, index) => {\r\n    console.dir(e.target);\r\n    this.draggedItem = Object.values(this.props.cards)[index];\r\n    e.dataTransfer.effectAllowed = \"grabbing\";\r\n    e.dataTransfer.setData(\"text/html\", e.target.parentNode);\r\n    e.dataTransfer.setDragImage(e.target.parentNode, 50, 50);\r\n  };\r\n\r\n  onDragOver = label => {\r\n    const draggedOverItem = Object.values(this.props.cards)[label];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = Object.values(this.props.cards).filter(\r\n      item => item !== this.draggedItem\r\n    );\r\n    // let items = this.props.cards;\r\n    // delete this.props.cards[this.draggedItem.label];\r\n\r\n    // console.dir(this.props.cards[this.draggedItem.label]);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(label, 0, this.draggedItem);\r\n\r\n    // items[label].position = this.draggedItem.position;\r\n\r\n    // this.setState({ items });\r\n    //ТЕСТ! Работает только если ключи объекта - числа по порядку\r\n    this.props.test(items);\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  // componentWillReceiveProps() {\r\n  //   this.setState({\r\n  //     ...Object.values(this.props.cards).items,\r\n  //     [4]: { isSelected: false }\r\n  //   });\r\n  //   console.log(Object.values(this.props.cards));\r\n  //   console.log(this.draggedItem);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        {Object.values(this.props.cards).map(\r\n          (card, idx) =>\r\n            (card.isSelected || Object.values(card.pinnedBy).length > 1) && (\r\n              /*  idx > 0 &&  */ <Card\r\n                key={card.label}\r\n                label={card.label}\r\n                onDragOver={() => this.onDragOver(idx)}\r\n                onDragStart={e => this.onDragStart(e, idx)}\r\n                onDragEnd={this.onDragEnd}\r\n                isSelected={card.isSelected}\r\n                pinnedBy={card.pinnedBy}\r\n                handleDelete={e => {\r\n                  // console.log(card.label);\r\n                  // e.stopPropagation();\r\n                  // console.log(\"DELETED\");\r\n                  // this.setState({\r\n                  //   ...Object.values(this.props.cards).items,\r\n                  //   [card.label]: { isSelected: false }\r\n                  // });\r\n                  // console.log({\r\n                  //   ...Object.values(this.props.cards).items,\r\n                  //   [card.label]: { isSelected: false }\r\n                  // });\r\n                  // console.log(Object.values(this.props.cards));\r\n                  return this.props.handleDeleteFromSelected(card.label);\r\n                }}\r\n\r\n                // handleSelect={() => {}}\r\n              />\r\n            )\r\n          // <li key={card} onDragOver={() => this.onDragOver(idx)}>\r\n          //   <div\r\n          //     className=\"drag\"\r\n          //     draggable\r\n          //     onDragStart={e => this.onDragStart(e, idx)}\r\n          //     onDragEnd={this.onDragEnd}\r\n          //   >\r\n          //     {/* <Hamburger /> */}o\r\n          //   </div>\r\n          //   <span className=\"content\">{card}</span>\r\n          // </li>\r\n\r\n          // (card.isSelected ||\r\n          //   (card.pinnedBy && Object.values(card.pinnedBy).length)) && (\r\n          //   <Card\r\n          //     onDragOver={() => this.onDragOver(idx)}\r\n          //     draggable\r\n          //     onDragStart={e => this.onDragStart(e, idx)}\r\n          //     onDragEnd={this.onDragEnd}\r\n          //     label={card.label}\r\n          //     key={card.label}\r\n          //     isSelected={card.isSelected}\r\n          //     pinnedBy={card.pinnedBy}\r\n          //     handleDelete={e => {\r\n          //       e.stopPropagation();\r\n          //       console.log(\"DELETED\");\r\n          //       // return this.props.handleDeleteFromSelected(card.label);\r\n          //     }}\r\n          //     // handleSelect={() => {}}\r\n          //   />\r\n          // )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.item\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    handleDeleteFromSelected,\r\n    handlePinInSelected,\r\n    handleSelectFromCatalog,\r\n    test\r\n  }\r\n)(MainPage);\r\n\r\n// const reallyDelete = window.confirm(\r\n//   `Вы действительно хотите удалить ${card.label} из закреплённых приложений?`\r\n// );\r\n\r\n// if (accessRights !== \"Admin_System\" && card.pinnedBy && reallyDelete) {\r\n//   alert(\r\n//     `Недостаточно прав для удаления закреплённого приложения \"${card.label}\"`\r\n//   );\r\n//   //TODO: если нельзя удалить, то сразу писать об этом\r\n// } else if (\r\n//   (!card.pinnedBy && reallyDelete) ||\r\n//   (card.pinnedBy && accessRights == \"Admin_System\")\r\n// )\r\n\r\n// handleSelectFromCatalog(card.label);\r\n// handlePinInSelected(card.label);\r\n// const reallyMakePinned =\r\n//   accessRights === \"Admin_System\"\r\n//     ? window.confirm(\r\n//         `Хотите ли вы сделать приложение ${card.label} обязательным для пользователей?`\r\n//       )\r\n//     : false;\r\n// if (reallyMakePinned) {\r\n// }\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleSelectFromCatalog } from \"../actions\";\r\nimport { handleDeleteFromCatalog } from \"../actions\";\r\nimport { handlePinInSelected } from \"../actions\";\r\n\r\nconst Catalog = ({\r\n  accessRights,\r\n  cards,\r\n  handleSelectFromCatalog,\r\n  handleDeleteFromCatalog,\r\n  handlePinInSelected\r\n}) => (\r\n  <div className=\"card-container\">\r\n    {/* TODO: Radix sort */}\r\n    {Object.values(cards)\r\n      .sort((first, second) => first.order - second.order)\r\n      .map(\r\n        (card, idx) =>\r\n          // console.log(cards[card.label] && cards[card.label].pinnedBy);\r\n\r\n          // let isSelected = false;\r\n\r\n          card.isInCatalog /*  &&\r\n          idx > 0 */ && (\r\n            <Card\r\n              label={card.label}\r\n              key={card.label}\r\n              canShowBacketwaste\r\n              handleSelect={e => {\r\n                e.stopPropagation();\r\n                // const reallySelect = window.confirm(\r\n                //   `Вы действительно хотите добавить ${card.label} в закреплённые приложений?`\r\n                // );\r\n\r\n                // let reallyMakePinned;\r\n                // if (accessRights === \"Admin__RC\" && cards[card.label]) {\r\n                //   if (cards[card.label].pinnedBy) {\r\n                //     reallyMakePinned = window.confirm(\r\n                //       `Хотите ли вы сделать приложение ${card.label} обязательным для пользователей?`\r\n                //     );\r\n                //   }\r\n                // }\r\n\r\n                // if (reallyMakePinned) {\r\n                if (\r\n                  accessRights.status &&\r\n                  accessRights.status.slice(0, 5) === \"Admin\"\r\n                )\r\n                  return handlePinInSelected(card.label, accessRights);\r\n\r\n                handleSelectFromCatalog(card.label);\r\n                // }\r\n\r\n                // if (reallySelect) {\r\n                //TODO: Нельзя выбирать уже выбранные приложения\r\n                // }\r\n              }}\r\n              handleDelete={e => {\r\n                e.stopPropagation();\r\n                // const reallyDelete = window.confirm(\r\n                //   `Вы действительно хотите удалить ${card.label} из каталога?`\r\n                // );\r\n\r\n                // if (accessRights.status !== \"Admin__RC\") {\r\n                //   alert(\r\n                //     `Недостаточно прав доступа ${accessRights.status} для удаления приложения из каталога!`\r\n                //   );\r\n                // }\r\n                // if (reallyDelete && accessRights.status === \"Admin__RC\") {\r\n                return handleDeleteFromCatalog(card.label);\r\n                // }\r\n              }}\r\n            />\r\n          )\r\n      )}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  accessRights: state.accessRights,\r\n  cards: state.item\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { handleSelectFromCatalog, handleDeleteFromCatalog, handlePinInSelected }\r\n)(Catalog);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/Card.css\";\r\nimport { handleAccessRightsChange } from \"../actions\";\r\nimport \"../styles/Card.css\";\r\n\r\nconst ACCESS_RIGHTS = {\r\n  User: { status: \"User\", priority: 0 },\r\n  Admin_System: { status: \"Admin_System\", priority: 1 },\r\n  Admin_MRF: { status: \"Admin_MRF\", priority: 2 },\r\n  Admin_RT: { status: \"Admin_RT\", priority: 3 }\r\n};\r\n\r\nconst AccessControl = ({ handleAccessRightsChange }) => (\r\n  <div className=\"access-control__select\">\r\n    <select\r\n      name=\"access\"\r\n      id=\"access\"\r\n      onChange={e => handleAccessRightsChange(ACCESS_RIGHTS[e.target.value])}\r\n    >\r\n      <option value=\"User\">User</option>\r\n      <option value=\"Admin_System\">Admin_System</option>\r\n      <option value=\"Admin_MRF\">Admin_MRF</option>\r\n      <option value=\"Admin_RT\">Admin_RT</option>\r\n    </select>\r\n    {/* <span>{`Ваши текущие права доступа: ${accessRights}`}</span> */}\r\n  </div>\r\n);\r\n\r\n// const mapStateToProps = state => ({\r\n//   accessRights: state.accessRights\r\n// });\r\n\r\nexport default connect(\r\n  null,\r\n  { handleAccessRightsChange }\r\n)(AccessControl);\r\n","const createHistory = require(\"history\").createBrowserHistory;\r\n\r\nexport default createHistory();\r\n","import React from \"react\";\r\nimport { Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\nimport Catalog from \"./Catalog\";\r\nimport AccessControl from \"./AccessControl\";\r\nimport history from \"../history\";\r\n\r\nconst App = () => (\r\n  <Router history={history}>\r\n    <nav className=\"navigation__nav\">\r\n      <Link to=\"/\">На главную</Link>\r\n      <Link to=\"/catalog\">Каталог приложений</Link>\r\n      <AccessControl />\r\n    </nav>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={MainPage} />\r\n      <Route path=\"/catalog\" exact component={Catalog} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import {\r\n  SELECT_FROM_CATALOG,\r\n  DELETE_FROM_SELECTED,\r\n  PIN_IN_SELECTED,\r\n  DELETE_FROM_CATALOG\r\n} from \"../actions/types\";\r\nimport p from \"immer\";\r\n\r\nconst INITAL_STATE = [\r\n  {\r\n    order: 0,\r\n    label: 0,\r\n    isSelected: true,\r\n    pinnedBy: { Admin_System: true, priority: 1 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 1,\r\n    label: 1,\r\n    isSelected: false,\r\n    pinnedBy: { Admin_MRF: true, priority: 2 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 2,\r\n    label: 2,\r\n    isSelected: true,\r\n    pinnedBy: { Admin_RT: true, priority: 3 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 3,\r\n    label: 3,\r\n    isSelected: true,\r\n    pinnedBy: { Admin_System: true, priority: 1 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 4,\r\n    label: 4,\r\n    isSelected: true,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 5,\r\n    label: 5,\r\n    isSelected: true,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 6,\r\n    label: 6,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 7,\r\n    label: 7,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 8,\r\n    label: 8,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 9,\r\n    label: 9,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 10,\r\n    label: 10,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 11,\r\n    label: 11,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 12,\r\n    label: 12,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 13,\r\n    label: 13,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 14,\r\n    label: 14,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 15,\r\n    label: 15,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 16,\r\n    label: 16,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 17,\r\n    label: 17,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  },\r\n  {\r\n    order: 18,\r\n    label: 18,\r\n    isSelected: false,\r\n    pinnedBy: { priority: 0 },\r\n    isInCatalog: true\r\n  }\r\n];\r\n\r\nexport default p((state = INITAL_STATE, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"test\": {\r\n      return action.payload;\r\n    }\r\n    case DELETE_FROM_SELECTED: {\r\n      // return {\r\n      //   ...state,\r\n      //   [payload]: {\r\n      //     ...state[payload],\r\n      //     isSelected: false,\r\n      //     pinnedBy: false\r\n      //   }\r\n      state[action.payload].isSelected = false;\r\n      state[action.payload].pinnedBy = false;\r\n      return state;\r\n    }\r\n    case DELETE_FROM_CATALOG:\r\n      // return {\r\n      //   ...state,\r\n      //   [payload]: {\r\n      //     ...state[payload],\r\n      //     isSelected: false,\r\n      //     isInCatalog: false,\r\n      //     pinnedBy: false\r\n      //   }\r\n      // };\r\n      state[action.payload].isSelected = false;\r\n      state[action.payload].isInCatalog = false;\r\n      state[action.payload].pinnedBy = false;\r\n\r\n      return state;\r\n\r\n    case SELECT_FROM_CATALOG:\r\n      // return {\r\n      //   ...state,\r\n      //   [payload]: {\r\n      //     ...state[payload],\r\n      //     label: payload,\r\n      //     isSelected: !state[payload].isSelected\r\n      //   }\r\n      // };\r\n      state[action.payload].isSelected = !state[action.payload].isSelected;\r\n\r\n      return state;\r\n    case PIN_IN_SELECTED:\r\n      const {\r\n        data,\r\n        accessRights: { status, priority }\r\n      } = payload;\r\n\r\n      console.log(state, action);\r\n      // return {\r\n      //   ...state,\r\n      //   [data]: {\r\n      //     ...state[data],\r\n      //     label: data,\r\n\r\n      //     pinnedBy: {\r\n      //       ...pinnedBy,\r\n      //       [status]: true,\r\n      //       priority\r\n      //     }\r\n      //   }\r\n      // };\r\n\r\n      state[data].pinnedBy[status] = true;\r\n      state[data].pinnedBy.priority = priority;\r\n\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n});\r\n\r\n/*\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"test\": {\r\n      return action.payload;\r\n    }\r\n    case DELETE_FROM_SELECTED:\r\n      return {\r\n        ...state,\r\n        [payload]: {\r\n          ...state[payload],\r\n          isSelected: false,\r\n          pinnedBy: false\r\n        }\r\n      };\r\n    case DELETE_FROM_CATALOG:\r\n      return {\r\n        ...state,\r\n        [payload]: {\r\n          ...state[payload],\r\n          isSelected: false,\r\n          isInCatalog: false,\r\n          pinnedBy: false\r\n        }\r\n      };\r\n\r\n    case SELECT_FROM_CATALOG:\r\n      return {\r\n        ...state,\r\n        [payload]: {\r\n          ...state[payload],\r\n          label: payload,\r\n          isSelected: !state[payload].isSelected\r\n        }\r\n      };\r\n    case PIN_IN_SELECTED:\r\n      const {\r\n        data,\r\n        data: { pinnedBy },\r\n        accessRights: { status, priority }\r\n      } = payload;\r\n\r\n      return {\r\n        ...state,\r\n        [data]: {\r\n          ...state[data],\r\n          label: data,\r\n\r\n          pinnedBy: {\r\n            ...pinnedBy,\r\n            [status]: true,\r\n            priority\r\n          }\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n*/\r\n","import { combineReducers } from \"redux\";\r\nimport selectedItemsReducer from \"./selectedItemsReducer\";\r\nimport accessRightsReducer from \"./accessRightsReducer\";\r\n\r\nexport default combineReducers({\r\n  item: selectedItemsReducer,\r\n  accessRights: accessRightsReducer\r\n});\r\n","import { CHANGE_ACCESS_RIGHTS } from \"../actions/types\";\r\n\r\nconst INITAL_STATE = \"User\";\r\n\r\nexport default (state = INITAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_ACCESS_RIGHTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose } from \"redux\";\r\nimport App from \"./components/App\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers());\r\n\r\n// store.subscribe(() => console.log(\"STORE: \", store.getState()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}